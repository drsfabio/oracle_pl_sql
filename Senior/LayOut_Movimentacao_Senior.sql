WITH ASSIGN_PARAM AS (
    SELECT 
        TO_DATE(:MINHA_VARIAVEL_RAIMUNDO, 'YYYY-MM-DD') AS EXTRACTION_DATE
    FROM DUAL
)
SELECT * 
FROM (
    SELECT DISTINCT 
        'Movimentacao' AS "flowName", -- Nome do fluxo
        (ASG.ASSIGNMENT_NUMBER || TO_CHAR(ASG.EFFECTIVE_START_DATE, 'DDMMYYYY') || TO_CHAR(ASG.LAST_UPDATE_DATE, 'DDMMYYYY') || TO_CHAR(SYSDATE, 'DDMMYYYY')) AS "flowInstanceID", -- ID único do fluxo
        'I' AS "tipOpe", -- Operação de inclusão
        CASE 
            WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ANT.ASSIGNMENT_NUMBER, 1, 3)
            ELSE SUBSTR(ASG.ASSIGNMENT_NUMBER, 1, 3) 
        END AS "numEmp", -- Código da empresa
        CASE 
            WHEN ASG.ASSIGNMENT_TYPE = 'E' THEN '1' 
            ELSE '2' 
        END AS "tipCol", -- Tipo de colaborador
        CASE 
            WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ANT.ASSIGNMENT_NUMBER, 4, 50)
            ELSE SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50)
        END AS "numCad", -- Número do cadastro
        TO_CHAR(ASG.EFFECTIVE_START_DATE, 'DD/MM/YYYY') AS "datAlt", -- Data de alteração
        ASG.ACTION_CODE AS "motivo", -- Motivo da movimentação
        CASE 
            WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ASG.ASSIGNMENT_NUMBER, 1, 3)
            ELSE '' 
        END AS "numEmpNova", -- Novo número da empresa
        CASE 
            WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50)
            ELSE '' 
        END AS "numCadNovo", -- Novo número do cadastro
        POS.POSITION_CODE AS "posTra", -- Posição de trabalho
        JOB.JOB_CODE AS "codCar", -- Código do cargo
        POS.ATTRIBUTE4 AS "codEsc", -- Código da escala
        RIF.ORG_INFORMATION1 AS "codFil", -- Código da filial
        REGEXP_REPLACE(LOC.INTERNAL_ADDRESS_LINE, '\D') AS "numLoc", -- Número do local
        FLV.FLEX_VALUE AS "codCcu", -- Código do centro de custo
        SID.INTERNAL_ADDRESS_LINE AS "codSin", -- Código do sindicato
        SAL.SALARY_BASIS_CODE AS "tipSal", -- Tipo de salário
        SAL.SALARY_AMOUNT AS "valSal", -- Valor do salário
        CASE 
            WHEN PDF.CATEGORY IN ('ORA_HRX_MOTOR_D', 'SA_HEA_IMP', 'SA_VIS_IMP', 'ORA_HRX_MENTAL_D', 'SA_INT_DIS') THEN 'S'
            ELSE 'N'
        END AS "defFis",
        CASE 
            WHEN PDF.CATEGORY = 'ORA_HRX_MOTOR_D' THEN '1'
            WHEN PDF.CATEGORY = 'SA_HEA_IMP' THEN '2'
            WHEN PDF.CATEGORY = 'SA_VIS_IMP' THEN '3'
            WHEN PDF.CATEGORY = 'ORA_HRX_MENTAL_D' THEN '4'
            WHEN PDF.CATEGORY = 'SA_INT_DIS' THEN '6'
            ELSE NULL
        END AS "codDef",
        PDF.ATTRIBUTE1 AS "cotDef",
        CASE 
            WHEN PDF.CATEGORY = '5' THEN 'S'
            ELSE 'N'
        END AS "benRea",
        ASG.PARENT_ASSIGNMENT_ID AS "ParentAssignment",
        ASG.ASSIGNMENT_ID AS "Assignment",
        ASG.PERSON_ID AS "PersonId",
        ASG.ASSIGNMENT_NUMBER AS "AssignmentNumber",
        ASG.LAST_UPDATED_BY AS "LatestUpdatedBy",
        GREATEST(ASG.LAST_UPDATE_DATE, NVL(SAL.LAST_UPDATE_DATE, ASG.LAST_UPDATE_DATE)) AS "UpdateDate",
        PAPF.PERSON_NUMBER AS "PersonNumber",
        ASG.CREATED_BY AS "CreatedBy",
        ASG.EFFECTIVE_END_DATE AS "EffectiveEndDate"
    FROM PER_ALL_ASSIGNMENTS_M ASG
    INNER JOIN ASSIGN_PARAM ASP ON (1 = 1)
    INNER JOIN PER_ALL_PEOPLE_F PAPF 
        ON ASG.PERSON_ID = PAPF.PERSON_ID 
        AND TRUNC(SYSDATE) BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
    LEFT JOIN HR_ALL_POSITIONS_F POS
        ON POS.POSITION_ID = ASG.POSITION_ID
        AND ASG.EFFECTIVE_END_DATE BETWEEN POS.EFFECTIVE_START_DATE AND POS.EFFECTIVE_END_DATE
    LEFT JOIN PER_JOBS_F JOB
        ON JOB.JOB_ID = POS.JOB_ID
        AND ASG.EFFECTIVE_END_DATE BETWEEN JOB.EFFECTIVE_START_DATE AND JOB.EFFECTIVE_END_DATE
    LEFT JOIN HR_ORGANIZATION_V SID
        ON SID.ORGANIZATION_ID = POS.UNION_ID
        AND SID.STATUS = 'A'
        AND SID.CLASSIFICATION_CODE = 'ORA_PER_UNION'
        AND ASG.EFFECTIVE_END_DATE BETWEEN SID.EFFECTIVE_START_DATE AND SID.EFFECTIVE_END_DATE
    LEFT JOIN HR_ORGANIZATION_V LOC
        ON LOC.ORGANIZATION_ID = POS.ORGANIZATION_ID
        AND LOC.CLASSIFICATION_CODE = 'DEPARTMENT'
        AND ASG.EFFECTIVE_END_DATE BETWEEN LOC.EFFECTIVE_START_DATE AND LOC.EFFECTIVE_END_DATE
    LEFT JOIN FND_FLEX_VALUES FLV
        ON FLV.FLEX_VALUE_ID = POS.COST_CENTER
    LEFT JOIN XLE_REGISTRATIONS_V RE
        ON RE.REGISTRATION_NUMBER = ASG.ASS_ATTRIBUTE19
        AND RE.LEGAL_ENTITY_ID IS NULL
        AND ASG.EFFECTIVE_END_DATE BETWEEN NVL(RE.EFFECTIVE_FROM, TO_DATE('1951-01-01', 'YYYY-MM-DD')) 
            AND NVL(RE.EFFECTIVE_TO, TO_DATE('4712-12-31', 'YYYY-MM-DD'))
    LEFT JOIN HR_ORGANIZATION_V EST
        ON EST.ESTABLISHMENT_ID = RE.ESTABLISHMENT_ID
        AND EST.STATUS = 'A'
        AND EST.CLASSIFICATION_CODE = 'HCM_REPORTING_ESTABLISHMENT'
        AND ASG.EFFECTIVE_END_DATE BETWEEN EST.EFFECTIVE_START_DATE AND EST.EFFECTIVE_END_DATE
    LEFT JOIN HR_ORGANIZATION_INFORMATION_F RIF
        ON RIF.ORG_INFORMATION_CONTEXT IN ('GM_EFF_ORG_FILIAL_DL', 'LACLS_BR_HCM_LRU_CODE')
        AND RIF.ORGANIZATION_ID = EST.ORGANIZATION_ID
        AND ASG.EFFECTIVE_END_DATE BETWEEN RIF.EFFECTIVE_START_DATE AND RIF.EFFECTIVE_END_DATE
    LEFT JOIN CMP_SALARY SAL
        ON SAL.ASSIGNMENT_ID = ASG.ASSIGNMENT_ID
        AND SAL.DATE_FROM = (
            SELECT MAX(SAL2.DATE_FROM) 
            FROM CMP_SALARY SAL2 
            WHERE SAL2.ASSIGNMENT_ID = ASG.ASSIGNMENT_ID
        )
    LEFT JOIN PER_DISABILITIES_F PDF
        ON ASG.PERSON_ID = PDF.PERSON_ID 
        AND ASG.EFFECTIVE_END_DATE BETWEEN PDF.EFFECTIVE_START_DATE 
        AND COALESCE(PDF.EFFECTIVE_END_DATE, SYSDATE) 
        AND PDF.CATEGORY IN ('ORA_HRX_MOTOR_D', 'SA_HEA_IMP', 'SA_VIS_IMP', 'ORA_HRX_MENTAL_D', 'SA_INT_DIS', '5')
    LEFT JOIN PER_ALL_ASSIGNMENTS_M ANT
        ON ASG.PERSON_ID = ANT.PERSON_ID 
        AND ANT.ASSIGNMENT_TYPE IN ('E') 
        AND (
            (ASG.PARENT_ASSIGNMENT_ID = ANT.ASSIGNMENT_ID 
             AND ASG.CREATED_BY NOT IN ('FUSION_APPS_HCM_ESS_LOADER_APPID'))
            OR
            (ASG.CREATED_BY = 'FUSION_APPS_HCM_ESS_LOADER_APPID' 
             AND ASG.EFFECTIVE_START_DATE = ANT.EFFECTIVE_START_DATE 
             AND ASG.ASSIGNMENT_ID <> ANT.ASSIGNMENT_ID)
        )
    WHERE 1 = 1
        AND ASP.EXTRACTION_DATE BETWEEN ASG.EFFECTIVE_START_DATE AND ASG.EFFECTIVE_END_DATE
        AND ASG.ACTION_CODE = 'GLB_TRANSFER'
        AND ASG.ASSIGNMENT_TYPE IN ('E')
        AND REGEXP_LIKE(ASG.ASSIGNMENT_NUMBER, '^[0-9]+$')
        AND ASG.ASSIGNMENT_STATUS_TYPE = 'ACTIVE'
        AND ASG.ASSIGNMENT_NUMBER IN ('004161674')
)
--2025-06-01T01:01:00.000+00:00