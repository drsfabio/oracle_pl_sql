WITH ASSIGN_PARAM AS (
	SELECT 
		CASE 
			WHEN :P_AsgNumber IS NULL THEN SYSDATE
			ELSE NVL(TO_DATE(TO_CHAR(:P_UpdateDate, 'YYYY-MM-DD'), 'YYYY-MM-DD'), SYSDATE) 
		END AS EXTRACTION_DATE
	FROM DUAL
)

SELECT * 

FROM (
	SELECT DISTINCT 'I' AS "TipOpe",
	--
	CASE 
		WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ANT.ASSIGNMENT_NUMBER, 1, 3)
			--(SELECT SUBSTR(ASG2.ASSIGNMENT_NUMBER, 1, 3) FROM PER_ALL_ASSIGNMENTS_M ASG2 WHERE ASG.ASSIGNMENT_ID = ASG2.PARENT_ASSIGNMENT_ID AND ASG.EFFECTIVE_START_DATE = (ASG2.EFFECTIVE_END_DATE + 1) AND ASG2.EFFECTIVE_LATEST_CHANGE = 'Y' AND ROWNUM = 1)
		ELSE SUBSTR(ASG.ASSIGNMENT_NUMBER, 1, 3) 
	END AS "numEmp",
	--
	CASE WHEN ASG.ASSIGNMENT_TYPE = 'E' THEN '1' ELSE '2' END AS "tipCol",
	CASE 
		WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ANT.ASSIGNMENT_NUMBER, 4, 50)
		ELSE SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50)
	END AS "numCad",
--	SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50) AS "numCad",
	TO_CHAR(ASG.EFFECTIVE_START_DATE, 'DD/MM/YYYY') AS "DatAlt",
	ASG.ACTION_CODE AS "Motivo",
	CASE 
		WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ASG.ASSIGNMENT_NUMBER, 1, 3)
		ELSE ''
	END AS "NumEmpNova",
	CASE 
		WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50)
		ELSE ''
	END AS "NumCadNova",
--	SUBSTR(ASG.ASSIGNMENT_NUMBER, 1, 3) AS "NumEmpNova",
--	SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50) AS "NumCadNova",
	POS.POSITION_CODE AS "posTra",
	JOB.JOB_CODE AS "codCar",
	POS.ATTRIBUTE4 AS "codEsc",
	RIF.ORG_INFORMATION1 AS "codFil",
	regexp_replace(LOC.INTERNAL_ADDRESS_LINE,'\D') AS "numLoc",
	FLV.FLEX_VALUE AS "codCcu",
	SID.INTERNAL_ADDRESS_LINE AS "codSin",
	SAL.SALARY_AMOUNT AS "valSal",
	ASG.PARENT_ASSIGNMENT_ID AS "ParentAssignment",
	ASG.ASSIGNMENT_ID AS "Assignment",
	ASG.PERSON_ID AS "PersonId",
	ASG.ASSIGNMENT_NUMBER AS "AssignmentNumber",
	ASG.LAST_UPDATED_BY AS "LatestUpdatedBy",
	SAL.SALARY_BASIS_CODE AS "tipSal", -- Search
	(ASG.ASSIGNMENT_NUMBER || TO_CHAR(ASG.EFFECTIVE_START_DATE, 'DDMMYYYY') || TO_CHAR(ASG.LAST_UPDATE_DATE, 'DDMMYYYY') || TO_CHAR(SYSDATE, 'DDMMYYYY')) AS "flowInstanceID",
	'Movimentacao' AS "flowName",
	CASE PDF.CATEGORY
		WHEN 'ORA_HRX_MOTOR_D' THEN 'S'
		WHEN 'SA_HEA_IMP' THEN 'S'
		WHEN 'SA_VIS_IMP' THEN 'S'
		WHEN 'ORA_HRX_MENTAL_D' THEN 'S'
		WHEN 'SA_INT_DIS' THEN 'S'
		ELSE 'N'
		END "DefFis",
	CASE PDF.CATEGORY
		WHEN 'ORA_HRX_MOTOR_D' THEN 1
		WHEN 'SA_HEA_IMP' THEN 2
		WHEN 'SA_VIS_IMP' THEN 3
		WHEN 'ORA_HRX_MENTAL_D' THEN 4
		WHEN 'SA_INT_DIS' THEN 6
		END AS "CodDef",
	PDF.ATTRIBUTE1 AS "CotDef",
	CASE 
		WHEN PDF.CATEGORY IS NOT NULL THEN 
			CASE PDF.CATEGORY
				WHEN '5' THEN 'S'
				ELSE 'N'
			END
	END AS BenRea,
	ASG.EFFECTIVE_END_DATE,
	GREATEST(ASG.LAST_UPDATE_DATE, NVL(SAL.LAST_UPDATE_DATE, ASG.LAST_UPDATE_DATE)) AS "UpdateDate"

--	, ASG.ACTION_CODE
--	, ASG.ASSIGNMENT_STATUS_TYPE
	, PAPF.PERSON_NUMBER
	, ASG.CREATED_BY
	
	FROM PER_ALL_ASSIGNMENTS_M ASG
	
		-- Param used as Context do Effective Dates --
		INNER JOIN ASSIGN_PARAM ASP
			ON (1 = 1)
			
		-- Position Info --
		LEFT JOIN HR_ALL_POSITIONS_F POS
			ON (POS.POSITION_ID = ASG.POSITION_ID
			AND ASG.EFFECTIVE_END_DATE BETWEEN POS.EFFECTIVE_START_DATE AND POS.EFFECTIVE_END_DATE)
	
		LEFT JOIN PER_JOBS_F JOB
			ON (JOB.JOB_ID = POS.JOB_ID
			AND ASG.EFFECTIVE_END_DATE BETWEEN JOB.EFFECTIVE_START_DATE AND JOB.EFFECTIVE_END_DATE)
	
		LEFT JOIN HR_ORGANIZATION_V SID
			ON (SID.ORGANIZATION_ID = POS.UNION_ID
			AND SID.STATUS = 'A'
			AND SID.CLASSIFICATION_CODE = 'ORA_PER_UNION'
			AND ASG.EFFECTIVE_END_DATE BETWEEN SID.EFFECTIVE_START_DATE AND SID.EFFECTIVE_END_DATE)
			
		LEFT JOIN HR_ORGANIZATION_V LOC
			ON (LOC.ORGANIZATION_ID = POS.ORGANIZATION_ID
			AND LOC.CLASSIFICATION_CODE = 'DEPARTMENT'
			AND ASG.EFFECTIVE_END_DATE BETWEEN LOC.EFFECTIVE_START_DATE AND LOC.EFFECTIVE_END_DATE)
			
		LEFT JOIN FND_FLEX_VALUES FLV
			ON (FLV.FLEX_VALUE_ID = POS.COST_CENTER)
				
			-- Reporting Estabilishment --
		LEFT JOIN XLE_REGISTRATIONS_V RE
			ON (RE.REGISTRATION_NUMBER = ASG.ASS_ATTRIBUTE19
			AND RE.LEGAL_ENTITY_ID IS NULL
			AND ASG.EFFECTIVE_END_DATE BETWEEN NVL(RE.EFFECTIVE_FROM, TO_DATE('1951-01-01','YYYY-MM-DD')) AND NVL(RE.EFFECTIVE_TO, TO_DATE('4712-12-31','YYYY-MM-DD')))
		
		LEFT JOIN HR_ORGANIZATION_V EST
			ON (EST.ESTABLISHMENT_ID = RE.ESTABLISHMENT_ID
			AND EST.STATUS = 'A'
			AND EST.CLASSIFICATION_CODE = 'HCM_REPORTING_ESTABLISHMENT'
			AND ASG.EFFECTIVE_END_DATE BETWEEN EST.EFFECTIVE_START_DATE AND EST.EFFECTIVE_END_DATE)
		
		LEFT JOIN HR_ORGANIZATION_INFORMATION_F RIF
			ON (RIF.ORG_INFORMATION_CONTEXT IN ('GM_EFF_ORG_FILIAL_DL', 'LACLS_BR_HCM_LRU_CODE')
			AND RIF.ORGANIZATION_ID = EST.ORGANIZATION_ID
			AND ASG.EFFECTIVE_END_DATE BETWEEN RIF.EFFECTIVE_START_DATE AND RIF.EFFECTIVE_END_DATE)	
	
		-- Compensation
		LEFT JOIN CMP_SALARY SAL
			ON (SAL.ASSIGNMENT_ID = ASG.ASSIGNMENT_ID
			AND SAL.DATE_FROM = (SELECT MAX(SAL2.DATE_FROM) FROM CMP_SALARY SAL2 WHERE SAL2.ASSIGNMENT_ID = ASG.ASSIGNMENT_ID))

		LEFT JOIN PER_ALL_ASSIGNMENTS_M ANT
			ON (
				ASG.PERSON_ID = ANT.PERSON_ID AND ANT.ASSIGNMENT_TYPE IN ('E') 
				AND (
					(ASG.PARENT_ASSIGNMENT_ID = ANT.ASSIGNMENT_ID AND ASG.CREATED_BY NOT IN ('FUSION_APPS_HCM_ESS_LOADER_APPID'))
					OR
					(ASG.CREATED_BY = 'FUSION_APPS_HCM_ESS_LOADER_APPID' AND ASG.EFFECTIVE_START_DATE = ANT.EFFECTIVE_START_DATE AND ASG.ASSIGNMENT_ID <> ANT.ASSIGNMENT_ID)
				)
			)			

		LEFT JOIN PER_DISABILITIES_F PDF
			ON ASG.PERSON_ID = PDF.PERSON_ID AND ASG.EFFECTIVE_END_DATE BETWEEN PDF.EFFECTIVE_START_DATE AND COALESCE(PDF.EFFECTIVE_END_DATE, SYSDATE)  AND PDF.CATEGORY IN ('ORA_HRX_MOTOR_D', 'SA_HEA_IMP', 'SA_VIS_IMP', 'ORA_HRX_MENTAL_D', 'SA_INT_DIS', '5')
	
		INNER JOIN PER_ALL_PEOPLE_F PAPF ON ASG.PERSON_ID = PAPF.PERSON_ID AND TRUNC(SYSDATE) BETWEEN PAPF.EFFECTIVE_START_DATE AND PAPF.EFFECTIVE_END_DATE
	
	WHERE 1 = 1
	AND ASG.ACTION_CODE not in ('HIRE', 'REHIRE')
	/* FABIO.. DESCOMENTAR A LINHA ABAIXO */
	AND ASG.ACTION_CODE = 'GLB_TRANSFER'
	/* FABIO.. COMENTAR A LINHA ABAIXO */
	--AND ASG.EFFECTIVE_LATEST_CHANGE = 'Y'
	AND ASG.ASSIGNMENT_TYPE IN ('E')
	AND REGEXP_LIKE(ASG.ASSIGNMENT_NUMBER, '^[0-9]+$')
	AND ASG.ASSIGNMENT_STATUS_TYPE = 'ACTIVE'
	AND (
		(ASG.ACTION_CODE = 'GLB_TRANSFER' AND (ASG.PARENT_ASSIGNMENT_ID IS NOT NULL OR ASG.CREATED_BY = 'FUSION_APPS_HCM_ESS_LOADER_APPID'))
		OR
		(ASG.ACTION_CODE NOT IN 'GLB_TRANSFER')
	)
	AND (
		-- Future or Current Update
		(:P_AsgNumber IS NULL
		AND TO_CHAR(ASG.EFFECTIVE_END_DATE, 'YYYY-MM-DD') = '4712-12-31'
		AND GREATEST(ASG.LAST_UPDATE_DATE, NVL(SAL.LAST_UPDATE_DATE, ASG.LAST_UPDATE_DATE)) > :P_UpdateDate) -- Polling Date To Query Just Last Updated Records
	OR
		-- Reprocess
		(ASG.ASSIGNMENT_NUMBER = :P_AsgNumber
		AND ASP.EXTRACTION_DATE BETWEEN ASG.EFFECTIVE_START_DATE AND ASG.EFFECTIVE_END_DATE)
	
	)	

--and asg.person_id = 300000019523360
	
/*	
UNION ALL


	SELECT 'E' AS "TipOpe",
	
	--
	CASE WHEN ASG.ACTION_CODE = 'GLB_TRANSFER' THEN (
													SELECT SUBSTR(ASG2.ASSIGNMENT_NUMBER, 1, 3) 
													FROM PER_ALL_ASSIGNMENTS_M ASG2 
													WHERE ASG.ASSIGNMENT_ID = ASG2.PARENT_ASSIGNMENT_ID 
													AND ASG.EFFECTIVE_START_DATE = (ASG2.EFFECTIVE_END_DATE + 1)
													AND ASG2.EFFECTIVE_LATEST_CHANGE = 'Y'
													AND ROWNUM = 1
													)
	
	ELSE SUBSTR(ASG.ASSIGNMENT_NUMBER, 1, 3) END AS "numEmp",
	--
	
	CASE WHEN ASG.ASSIGNMENT_TYPE = 'E' THEN '1' ELSE '2' END AS "tipCol",
	SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50) AS "numCad",
	TO_CHAR(ASG.EFFECTIVE_START_DATE, 'DD/MM/YYYY') AS "DatAlt",
	ASG.ACTION_CODE AS "Motivo",
	SUBSTR(ASG.ASSIGNMENT_NUMBER, 1, 3) AS "NumEmpNova",
	SUBSTR(ASG.ASSIGNMENT_NUMBER, 4, 50) AS "NumCadNova",
	NULL AS "posTra",
	NULL AS "codCar",
	NULL AS "codEsc",
	NULL AS "codFil",
	NULL AS "numLoc",
	NULL AS "codCcu",
	NULL AS "codSin",
	NULL AS "valSal",
	ASG.PARENT_ASSIGNMENT_ID AS "ParentAssignment",
	ASG.ASSIGNMENT_ID AS "Assignment",
	ASG.PERSON_ID AS "PersonId",
	ASG.ASSIGNMENT_NUMBER AS "AssignmentNumber",
	ASG.LAST_UPDATED_BY AS "LatestUpdatedBy",
	GREATEST(ASG.LAST_UPDATE_DATE, NVL(SAL.LAST_UPDATE_DATE, ASG.LAST_UPDATE_DATE)) AS "UpdateDate"
	
	FROM PER_ALL_ASSIGNMENTS_M_ ASG
	
		-- Param used as Context do Effective Dates --
		INNER JOIN ASSIGN_PARAM ASP
			ON (1 = 1)
			
		-- Position Info --
		LEFT JOIN HR_ALL_POSITIONS_F POS
			ON (POS.POSITION_ID = ASG.POSITION_ID
			AND ASG.EFFECTIVE_END_DATE BETWEEN POS.EFFECTIVE_START_DATE AND POS.EFFECTIVE_END_DATE)
	
		LEFT JOIN PER_JOBS_F JOB
			ON (JOB.JOB_ID = POS.JOB_ID
			AND ASG.EFFECTIVE_END_DATE BETWEEN JOB.EFFECTIVE_START_DATE AND JOB.EFFECTIVE_END_DATE)
	
		LEFT JOIN HR_ORGANIZATION_V SID
			ON (SID.ORGANIZATION_ID = POS.UNION_ID
			AND SID.STATUS = 'A'
			AND SID.CLASSIFICATION_CODE = 'ORA_PER_UNION'
			AND ASG.EFFECTIVE_END_DATE BETWEEN SID.EFFECTIVE_START_DATE AND SID.EFFECTIVE_END_DATE)
			
		LEFT JOIN HR_ORGANIZATION_V LOC
			ON (LOC.ORGANIZATION_ID = POS.ORGANIZATION_ID
			AND LOC.CLASSIFICATION_CODE = 'DEPARTMENT'
			AND ASG.EFFECTIVE_END_DATE BETWEEN LOC.EFFECTIVE_START_DATE AND LOC.EFFECTIVE_END_DATE)
			
		LEFT JOIN FND_FLEX_VALUES FLV
			ON (FLV.FLEX_VALUE_ID = POS.COST_CENTER)
				
			-- Reporting Estabilishment --
		LEFT JOIN XLE_REGISTRATIONS_V RE
			ON (RE.REGISTRATION_NUMBER = ASG.ASS_ATTRIBUTE19
			AND RE.LEGAL_ENTITY_ID IS NULL
			AND ASG.EFFECTIVE_END_DATE BETWEEN NVL(RE.EFFECTIVE_FROM, TO_DATE('1951-01-01','YYYY-MM-DD')) AND NVL(RE.EFFECTIVE_TO, TO_DATE('4712-12-31','YYYY-MM-DD')))
		
		LEFT JOIN HR_ORGANIZATION_V EST
			ON (EST.ESTABLISHMENT_ID = RE.ESTABLISHMENT_ID
			AND EST.STATUS = 'A'
			AND EST.CLASSIFICATION_CODE = 'HCM_REPORTING_ESTABLISHMENT'
			AND ASG.EFFECTIVE_END_DATE BETWEEN EST.EFFECTIVE_START_DATE AND EST.EFFECTIVE_END_DATE)
		
		LEFT JOIN HR_ORGANIZATION_INFORMATION_F RIF
			ON (RIF.ORG_INFORMATION_CONTEXT IN ('GM_EFF_ORG_FILIAL_DL', 'LACLS_BR_HCM_LRU_CODE')
			AND RIF.ORGANIZATION_ID = EST.ORGANIZATION_ID
			AND ASG.EFFECTIVE_END_DATE BETWEEN RIF.EFFECTIVE_START_DATE AND RIF.EFFECTIVE_END_DATE)	
	
		-- Compensation
		LEFT JOIN CMP_SALARY SAL
			ON (SAL.ASSIGNMENT_ID = ASG.ASSIGNMENT_ID
			AND SAL.DATE_FROM = (SELECT MAX(SAL2.DATE_FROM) FROM CMP_SALARY SAL2 WHERE SAL2.ASSIGNMENT_ID = ASG.ASSIGNMENT_ID))
	
	WHERE 1 = 1
	AND ASG.ACTION_CODE != 'HIRE'
	AND ASG.ASSIGNMENT_TYPE IN ('E')
	AND ASG.AUDIT_ACTION_TYPE_ = 'DELETE'
	AND REGEXP_LIKE(ASG.ASSIGNMENT_NUMBER, '^[0-9]+$')
	AND (
		-- Future or Current Update
		(:P_AsgNumber IS NULL
		AND TO_CHAR(ASG.EFFECTIVE_END_DATE, 'YYYY-MM-DD') = '4712-12-31'
		AND GREATEST(ASG.LAST_UPDATE_DATE, NVL(SAL.LAST_UPDATE_DATE, ASG.LAST_UPDATE_DATE)) > :P_UpdateDate) -- Polling Date To Query Just Last Updated Records
	OR
		-- Reprocess
		(ASG.ASSIGNMENT_NUMBER = :P_AsgNumber
		AND ASP.EXTRACTION_DATE BETWEEN ASG.EFFECTIVE_START_DATE AND ASG.EFFECTIVE_END_DATE)
	
	)
*/	
)
OFFSET NVL(:P_Page * 4000, 0) ROWS FETCH NEXT 4000 ROWS ONLY